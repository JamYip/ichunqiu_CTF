# coding=UTF-8


# http://factordb.com/index.php 将 n 分解为 p q
p = 0xf64ef16d60d35615c4b78ff2f2c6625cc58294398c4658a2f5cb1214ca497a61046ec17984d7ce46dd3cd7e2242c5486c62b6b5184e85531aa54eacf48b0cc4df792867b3d50ad056dc739e567f45465c81d808adfadc1b7d3a6dfe04c7f8aec9a595f04615ba21762d7225bd462ab9afbf57008e5dbfc61aaaa9e44b848ee25e5a7a0a823bc92718739d830b1f21942f7bf68e702fa4afe2cccd6cfb0c11342deca75c3c0ca8f9f4993a91310dc42819dfe702738dba4d85f6b585efe9ff1b2a912fee1cf61620fda877a547858e3e9d9138f1a05b4c75e43407267205f47657f2a56bfca1b3b1e05a1a22ff7e6f3c01bdb85e297abe63b6253446b63c2f0e9
q = 0xf64ef16d60d35615c4b78ff2f2c6625cc58294398c4658a2f5cb1214ca497a61046ec17984d7ce46dd3cd7e2242c5486c62b6b5184e85531aa54eacf48b0cc4df792867b3d50ad056dc739e567f45465c81d808adfadc1b7d3a6dfe04c7f8aec9a595f04615ba21762d7225bd462ab9afbf57008e5dbfc61aaaa9e44b848ee25e5a7a0a823bc92718739d830b1f21942f7bf68e702fa4afe2cccd6cfb0c11342deca75c3c0ca8f9f4993a91310dc42819dfe702738dba4d85f6b585efe9ff1b2a912fee1cf61620fda877a547858e3e9d9138f1a05b4c75e43407267205f47657f2a56bfca1b3b1e05a1a22ff7e6f3c01bdb85e297abe63b6253446b6fb535e5
e = 0x010001 # 65537
c = 168502910088858295634315070244377409556567637139736308082186369003227771936407321783557795624279162162305200436446903976385948677897665466290852769877562167487142385308027341639816401055081820497002018908896202860342391029082581621987305533097386652183849657065952062433988387640990383623264405525144003500286531262674315900537001845043225363148359766771033899680111076181672797077410584747509581932045540801777738548872747597899965366950827505529432483779821158152928899947837196391555666165486441878183288008753561108995715961920472927844877569855940505148843530998878113722830427807926679324241141182238903567682042410145345551889442158895157875798990903715105782682083886461661307063583447696168828687126956147955886493383805513557604179029050981678755054945607866353195793654108403939242723861651919152369923904002966873994811826391080318146260416978499377182540684409790357257490816203138499369634490897553227763563553981246891677613446390134477832143175248992161641698011195968792105201847976082322786623390242470226740685822218140263182024226228692159380557661591633072091945077334191987860262448385123599459647228562137369178069072804498049463136233856337817385977990145571042231795332995523988174895432819872832170029690848
# 由 p q 算出 d
def egcd(a, b):
    if a == 0:
      return (b, 0, 1)
    else:
      g, y, x = egcd(b % a, a)
      return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m

d=modinv(e,(p-1)*(q-1))

m = pow(c, d, p * q)

print(hex(m)[2:-1].decode('hex'))

